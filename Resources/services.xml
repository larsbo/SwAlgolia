<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="sw_algolia.view_dir">%sw_algolia.plugin_dir%/Resources/views</parameter>
    </parameters>

    <services>

        <!-- =============================  -->
        <!-- PSR3 Logger                    -->
        <!-- =============================  -->
        <service id="sw_algolia.logger.handler" class="Monolog\Handler\RotatingFileHandler" public="false">
            <argument>%kernel.logs_dir%/plugin_sw_algolia_%kernel.environment%.log</argument>
            <argument>14</argument>
            <call method="pushProcessor">
                <argument type="service" id="monolog.processor.uid" />
            </call>
        </service>

        <service id="sw_algolia.logger.stream_handler" class="Monolog\Handler\StreamHandler" public="false">
            <argument>php://stdout</argument>
            <call method="pushProcessor">
                <argument type="service" id="monolog.processor.uid" />
            </call>
        </service>

        <service id="sw_algolia.logger.psr3processor" class="Monolog\Processor\PsrLogMessageProcessor" public="false" />

        <service id="sw_algolia.logger" class="Shopware\Components\Logger">
            <argument>sw_algolia</argument>
            <call method="pushHandler">
                <argument type="service" id="sw_algolia.logger.handler" />
            </call>
            <call method="pushHandler">
                <argument type="service" id="sw_algolia.logger.stream_handler" />
            </call>
            <call method="pushProcessor">
                <argument type="service" id="sw_algolia.logger.psr3processor" />
            </call>
        </service>
        <!-- =============================  -->
        <!-- /PSR3 Logger                   -->
        <!-- =============================  -->

        <!-- =============================  -->
        <!-- Event subscriber               -->
        <!-- =============================  -->
        <service id="sw_algolia.subscriber.algolia_search_subscriber" class="SwAlgolia\Subscriber\AlgoliaSearchSubscriber">
            <argument type="string">%sw_algolia.view_dir%</argument>
            <argument type="service" id="service_container"/>
            <tag name="shopware.event_subscriber"/>
        </service>

        <service id="sw_algolia.subscriber.assets_subscriber" class="SwAlgolia\Subscriber\AssetsSubscriber">
            <argument type="string">%sw_algolia.view_dir%</argument>
            <tag name="shopware.event_subscriber"/>
        </service>

        <service id="sw_algolia.subscriber.controller_subscriber" class="SwAlgolia\Subscriber\ControllerSubscriber">
            <argument>%sw_algolia.plugin_dir%</argument>
            <tag name="shopware.event_subscriber"/>
        </service>

        <!-- Consumes events fired by ORM -->
        <service id="sw_algolia.orm_backlog_subscriber" class="SwAlgolia\Subscriber\ORMBacklogSubscriber" public="false">
            <argument type="service" id="service_container" />
            <tag name="doctrine.event_subscriber" />
        </service>

        <!-- Consumes events fired by Shopware -->
        <service id="sw_algolia.domain_backlog_subscriber" class="SwAlgolia\Subscriber\DomainBacklogSubscriber">
            <argument type="service" id="service_container" />
            <tag name="shopware.event_subscriber" />
        </service>
        <!-- =============================  -->
        <!-- /Event subscriber              -->
        <!-- =============================  -->

        <!-- =============================  -->
        <!-- Define the services            -->
        <!-- =============================  -->
        <service id="sw_algolia.sync_helper_service"
                 class="SwAlgolia\Services\SyncHelperService"
                 public="true">
            <argument type="service" id="sw_algolia.logger" />
        </service>

        <service id="sw_algolia.sync_service"
                 class="SwAlgolia\Services\SyncService"
                 public="true">
            <argument type="service" id="sw_algolia.logger" />
            <argument type="service" id="shopware_storefront.context_service" />
            <argument type="service" id="shopware_storefront.product_service" />
            <argument type="service" id="sw_algolia.algolia_service" />
            <argument type="service" id="sw_algolia.sync_helper_service" />
        </service>

        <service id="sw_algolia.algolia_service"
                 class="SwAlgolia\Services\AlgoliaService"
                 public="true">
            <argument type="service" id="sw_algolia.logger" />
            <argument type="service" id="shopware_storefront.context_service" />
        </service>

        <service id="sw_algolia.client" class="AlgoliaSearch\Client" >
            <factory class="Shopware\Bundle\ESIndexingBundle\ClientFactory" method="createClient" />
        </service>

        <service id="sw_algolia.shop_indexer_factory" class="SwAlgolia\Services\DependencyInjection\Factory\ShopIndexerFactory" >
            <argument type="collection" />
            <argument type="collection" />
            <argument type="collection" />
        </service>

        <service id="sw_algolia.shop_indexer" class="SwAlgolia\Services\ShopIndexer">
            <factory service="sw_algolia.shop_indexer_factory" method="factory" />
            <argument type="service" id="service_container" />
        </service>

        <service id="sw_algolia.field_mapping" class="SwAlgolia\Services\FieldMapping">
            <argument type="service" id="sw_algolia.shop_analyzer" />
        </service>

        <service id="sw_algolia.index_factory" class="SwAlgolia\Services\IndexFactory" >
            <argument>test</argument>
            <argument>1</argument>
            <argument>1</argument>
        </service>

        <service id="sw_algolia.shop_analyzer" class="SwAlgolia\Services\ShopAnalyzer" />

        <service id="sw_algolia.product_query_factory" class="SwAlgolia\Services\Product\ProductQueryFactory">
            <argument type="service" id="dbal_connection" />
        </service>

        <service id="sw_algolia.property_query_factory" class="SwAlgolia\Services\Property\PropertyQueryFactory">
            <argument type="service" id="dbal_connection" />
        </service>

        <service id="sw_algolia.identifier_selector" class="SwAlgolia\Services\IdentifierSelector">
            <argument type="service" id="dbal_connection" />
            <argument type="service" id="shopware_storefront.shop_gateway_dbal" />
        </service>

        <service id="sw_algolia.composite_synchronizer_factory" class="SwAlgolia\Services\DependencyInjection\Factory\CompositeSynchronizerFactory" >
            <argument type="collection" />
        </service>

        <service id="sw_algolia.composite_synchronizer" class="SwAlgolia\Services\CompositeSynchronizerService">
            <factory service="sw_algolia.composite_synchronizer_factory" method="factory" />
            <argument type="service" id="service_container" />
        </service>

        <service id="sw_algolia.backlog_processor"
                 class="SwAlgolia\Services\BacklogProcessor"
                 public="true">
            <argument type="service" id="dbal_connection" />
            <argument type="service" id="sw_algolia.composite_synchronizer" />
            <argument type="service" id="sw_algolia.index_factory" />
            <argument type="service" id="sw_algolia.identifier_selector" />
        </service>

        <service id="sw_algolia.backlog_reader" class="SwAlgolia\Services\BacklogReader">
            <argument type="service" id="dbal_connection" />
        </service>

        <service id="sw_algolia.property_indexer" class="SwAlgolia\Services\Property\PropertyIndexer">
            <argument type="service" id="sw_algolia.client" />
            <argument type="service" id="sw_algolia.property_query_factory" />
            <argument type="service" id="sw_algolia.property_provider" />
            <tag name="sw_algolia.data_indexer" />
        </service>

        <service id="sw_algolia.property_synchronizer" class="SwAlgolia\Services\Property\PropertySynchronizer">
            <argument type="service" id="sw_algolia.property_indexer" />
            <tag name="sw_algolia.synchronizer" />
        </service>

        <service id="sw_algolia.property_provider" class="SwAlgolia\Services\Property\PropertyProvider">
            <argument type="service" id="dbal_connection" />
            <argument type="service" id="shopware_storefront.context_service" />
            <argument type="service" id="shopware_storefront.field_helper_dbal" />
            <argument type="service" id="shopware_storefront.property_hydrator_dbal" />
        </service>

        <service id="sw_algolia.property_mapping" class="SwAlgolia\Services\Property\PropertyMapping">
            <argument type="service" id="sw_algolia.field_mapping" />
            <tag name="sw_algolia.mapping" />
        </service>

        <service id="sw_algolia.product_indexer" class="SwAlgolia\Services\Product\ProductIndexer">
            <argument type="service" id="sw_algolia.client" />
            <argument type="service" id="sw_algolia.product_provider" />
            <argument type="service" id="sw_algolia.product_query_factory" />

            <tag name="sw_algolia.data_indexer" />
        </service>

        <service id="sw_algolia.product_synchronizer" class="SwAlgolia\Services\Product\ProductSynchronizer">
            <argument type="service" id="sw_algolia.product_query_factory" />
            <argument type="service" id="sw_algolia.product_indexer" />
            <tag name="sw_algolia.synchronizer" />
        </service>

        <service id="sw_algolia.product_provider" class="SwAlgolia\Services\Product\ProductProvider">
            <argument type="service" id="shopware_storefront.list_product_gateway" />
            <argument type="service" id="shopware_storefront.cheapest_price_service" />
            <argument type="service" id="shopware_storefront.vote_service" />
            <argument type="service" id="shopware_storefront.context_service" />
            <argument type="service" id="dbal_connection" />
            <argument type="service" id="sw_algolia.identifier_selector" />
            <argument type="service" id="shopware_storefront.price_calculation_service" />
            <argument type="service" id="shopware_storefront.field_helper_dbal" />
            <argument type="service" id="shopware_storefront.property_hydrator_dbal" />
        </service>

        <service id="sw_algolia.product_mapping" class="SwAlgolia\Services\Product\ProductMapping">
            <argument type="service" id="sw_algolia.identifier_selector" />
            <argument type="service" id="sw_algolia.field_mapping" />
            <tag name="sw_algolia.mapping" />
        </service>
        <!-- =============================  -->
        <!-- /Define the services           -->
        <!-- =============================  -->

        <service id="sw_algolia.config_reader" class="SwAlgolia\Services\ConfigReader">
            <argument type="service" id="models"/>
            <argument>%sw_algolia.plugin_dir%</argument>
        </service>

        <!-- =============================  -->
        <!-- Commands                       -->
        <!-- =============================  -->
        <service
                id="sw_algolia.commands.sync_command"
                class="SwAlgolia\Commands\SyncCommand">
            <tag name="console.command"/>
            <argument type="service" id="sw_algolia.logger" />
            <argument type="service" id="sw_algolia.sync_service" />
        </service>
        <!-- =============================  -->
        <!-- /Commands                      -->
        <!-- =============================  -->

    </services>
</container>
